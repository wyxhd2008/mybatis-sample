<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rick.db.mybatis.mapper.SysUserMapper">
  <resultMap id="BaseResultMap" type="com.rick.db.mybatis.model.SysUser">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_password" jdbcType="VARCHAR" property="userPassword" />
    <result column="user_email" jdbcType="VARCHAR" property="userEmail" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="user_info" jdbcType="LONGVARCHAR" property="userInfo" />
    <result column="head_img" jdbcType="LONGVARBINARY" property="headImg" />
  </resultMap>

  <resultMap id="userMap" type="SysUser">
    <id property="id" column="id"/>
    <result property="userName" column="user_name"/>
    <result property="userPassword" column="user_password"/>
    <result property="userEmail" column="user_email"/>
    <result property="userInfo" column="user_info"/>
    <result property="headImg" column="head_img" jdbcType="BLOB"/>
    <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
  </resultMap>

  <resultMap id="userRoleListMap" extends="com.rick.db.mybatis.mapper.SysUserMapper.userMap" type="SysUser">
    <collection property="roleList" columnPrefix="role_"
                resultMap="com.rick.db.mybatis.mapper.SysRoleMapper.roleMap"/>
  </resultMap>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from sys_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" useGeneratedKeys="true" keyProperty="id"  parameterType="com.rick.db.mybatis.model.SysUser">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into sys_user (user_name, user_password,
      user_email, create_time, user_info)
    values (#{userName,jdbcType=VARCHAR}, #{userPassword,jdbcType=VARCHAR},
      #{userEmail,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{userInfo,jdbcType=LONGVARCHAR})
    <selectKey keyColumn="id" keyProperty="id"  order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
  </insert>
  <update id="updateByPrimaryKey"  parameterType="com.rick.db.mybatis.model.SysUser">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update sys_user
    set user_name = #{userName,jdbcType=VARCHAR},
      user_password = #{userPassword,jdbcType=VARCHAR},
      user_email = #{userEmail,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      user_info = #{userInfo,jdbcType=LONGVARCHAR},
      head_img = #{headImg,jdbcType=LONGVARBINARY}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, user_name, user_password, user_email, create_time, user_info, head_img
    from sys_user
    where id = #{id,jdbcType=BIGINT}
  </select>

  <select id="selectByUser" resultMap="BaseResultMap">
	    select id,
	    	user_name,
	        user_password,
	        user_email,
	        user_info,
	        head_img,
	        create_time
	    from sys_user
    <where>
      <if test="userName != null and userName != ''">
        and user_name like concat('%', #{userName}, '%')
      </if>
      <if test="userEmail != '' and userEmail != null">
        and user_email = #{userEmail}
      </if>
    </where>

  </select>

  <select id="selectUserById" statementType="CALLABLE" useCache="false">
	    {call select_user_by_id(
	    	#{id, mode=IN},
	    	#{userName, mode=OUT, jdbcType=VARCHAR},
	    	#{userPassword, mode=OUT, jdbcType=VARCHAR},
	    	#{userEmail, mode=OUT, jdbcType=VARCHAR},
	    	#{userInfo, mode=OUT, jdbcType=VARCHAR},
	    	#{headImg, mode=OUT, jdbcType=BLOB, javaType=_byte[]},
	    	#{createTime, mode=OUT, jdbcType=TIMESTAMP}
	    )}
	</select>

  <select id="selectUserPage" statementType="CALLABLE" useCache="false" resultMap="userMap">
    {call select_user_page(
            #{userName, mode=IN},
            #{offset, mode=IN},
            #{limit, mode=IN},
            #{total, mode=OUT, jdbcType=BIGINT}
    )}
  </select>

  <select id="selectAllUserAndRoles" resultMap="userRoleListMap">
	    select
	    	u.id,
	    	u.user_name,
	        u.user_password,
	        u.user_email,
	        u.user_info,
	        u.head_img,
	        u.create_time,
	        r.id role_id,
			r.role_name role_role_name,
			r.enabled role_enabled,
			r.create_by role_create_by,
			r.create_time role_create_time
		from sys_user u
		inner join sys_user_role ur on u.id = ur.user_id
		inner join sys_role r on ur.role_id = r.id
	</select>

  <update id="updateByIdSelective">
    update sys_user
    <set>
      <if test="userName != null and userName != ''">
        user_name = #{userName},
      </if>
      <if test="userPassword != null and userPassword != ''">
        user_password = #{userPassword},
      </if>
      <if test="userEmail != null and userEmail != ''">
        user_email = #{userEmail},
      </if>
      <if test="userInfo != null and userInfo != ''">
        user_info = #{userInfo},
      </if>
      <if test="headImg != null">
        head_img = #{headImg, jdbcType=BLOB},
      </if>
      <if test="createTime != null">
        create_time = #{createTime, jdbcType=TIMESTAMP},
      </if>
      id = #{id},
    </set>
    where id = #{id}
  </update>


  <insert id="insert2" useGeneratedKeys="true" keyProperty="id">
    insert into sys_user(
    user_name, user_password,
    <if test="userEmail != null">
      <if test="userEmail != ''">
        user_email,
      </if>
    </if>
    user_info, head_img, create_time)
    values(
    #{userName}, #{userPassword},
    <if test="userEmail != null">
      <if test="userEmail != ''">
        #{userEmail},
      </if>
    </if>
    #{userInfo}, #{headImg, jdbcType=BLOB}, #{createTime, jdbcType=TIMESTAMP})
  </insert>

  <select id="selectAll" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, user_name, user_password, user_email, create_time, user_info, head_img
    from sys_user
  </select>
  <select id="selectById" resultType="sysUser">
    select * from sys_user where id=#{id}
  </select>

  <select id="testTrim" resultType="SysUser">
        select * from sys_user
        <trim prefix="where" prefixOverrides="AND |OR ">
          <if test="userEmail != ''">
            #{userEmail},
          </if>
        </trim>
  </select>

  <update id="updateByMap">
    update sys_user
    set
    <foreach collection="_parameter" item="val" index="key" separator=",">
      ${key} = #{val}
    </foreach>
    where id = #{id}
  </update>

  <insert id="insertList" useGeneratedKeys="true" keyProperty="id">
    insert into sys_user(
    user_name, user_password,user_email,
    user_info, head_img, create_time)
    values
    <foreach collection="list" item="user" separator=",">
      (
      #{user.userName}, #{user.userPassword},#{user.userEmail},
      #{user.userInfo}, #{user.headImg, jdbcType=BLOB}, #{user.createTime, jdbcType=TIMESTAMP})
    </foreach>
  </insert>

  <select id="selectByIdList" resultType="SysUser">
    select id,
    user_name userName,
    user_password userPassword,
    user_email userEmail,
    user_info userInfo,
    head_img headImg,
    create_time createTime
    from sys_user
    where id in
    <foreach collection="list" open="(" close=")" separator="," item="id" index="i">
      #{id}
    </foreach>
  </select>

  <select id="selectByIdOrUserName" resultType="SysUser">
    select id,
    user_name userName,
    user_password userPassword,
    user_email userEmail,
    user_info userInfo,
    head_img headImg,
    create_time createTime
    from sys_user
    where 1 = 1
    <choose>
      <when test="id != null">
        and id = #{id}
      </when>
      <when test="userName != null and userName != ''">
        and user_name = #{userName}
      </when>
      <otherwise>
        limit 0
      </otherwise>
    </choose>
  </select>
  
  <select id="selectRoleByUserIdAndRoleEnabled" resultType="sysRole">

    select r.*
    from sys_user u
    inner join sys_user_role ur on u.id=ur.user_id
    inner join sys_role r on ur.role_id=r.id
    where u.id=#{userId} and r.enabled=#{enabled}

  </select>
  <select id="selectRoleByUserId" resultType="sysRole">

    select r.*,u.user_name as "sysUser.userName",u.user_email as "sysUser.userEmail"
    from sys_user u
    inner join sys_user_role ur on u.id=ur.user_id
    inner join sys_role r on ur.role_id=r.id
    where u.id=#{userId}

  </select>
</mapper>